#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.2
#  in conjunction with Tcl version 8.6
#    Aug 09, 2021 03:42:20 PM WAT  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk

    py3 = False
except ImportError:
    import tkinter.ttk as ttk

    py3 = True

from PIL import Image, ImageTk

import mike_mian_support
import os.path


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    root = tk.Tk()
    mike_mian_support.set_Tk_var()
    top = Toplevel1(root)
    mike_mian_support.init(root, top)
    root.mainloop()


w = None


def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    # rt = root
    root = rt
    w = tk.Toplevel(root)
    mike_mian_support.set_Tk_var()
    top = Toplevel1(w)
    mike_mian_support.init(w, top, *args, **kwargs)
    return (w, top)


def destroy_Toplevel1():
    global w
    w.destroy()
    w = None


class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#ececec'  # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.', background=_bgcolor)
        self.style.configure('.', foreground=_fgcolor)
        self.style.configure('.', font="TkDefaultFont")
        self.style.map('.', background=
        [('selected', _compcolor), ('active', _ana2color)])

        top.geometry("600x451+383+106")
        top.minsize(120, 1)
        top.maxsize(1370, 749)
        top.resizable(1, 1)
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        # --------------------------------TRANSFER FRAME----------------------

        self.quickTransfer = tk.Frame(top)
        self.quickTransfer.place(relx=0.183, rely=0.044, relheight=0.885
                            , relwidth=0.575)
        self.quickTransfer.configure(relief='groove')
        self.quickTransfer.configure(borderwidth="2")
        self.quickTransfer.configure(relief="groove")
        self.quickTransfer.configure(background="#d9d9d9")
        self.quickTransfer.configure(cursor="fleur")
        self.quickTransfer.configure(highlightbackground="#d9d9d9")
        self.quickTransfer.configure(highlightcolor="black")

        self.quickBANK_TRANSFER = tk.Label(self.quickTransfer)
        self.quickBANK_TRANSFER.place(relx=0.203, rely=0.025, height=47, width=210)
        self.quickBANK_TRANSFER.configure(activebackground="#f9f9f9")
        self.quickBANK_TRANSFER.configure(activeforeground="black")
        self.quickBANK_TRANSFER.configure(background="#d9d9d9")
        self.quickBANK_TRANSFER.configure(disabledforeground="#a3a3a3")
        self.quickBANK_TRANSFER.configure(font="-family {Verdana} -size 11 -weight bold")
        self.quickBANK_TRANSFER.configure(foreground="#000000")
        self.quickBANK_TRANSFER.configure(highlightbackground="#d9d9d9")
        self.quickBANK_TRANSFER.configure(highlightcolor="black")
        self.quickBANK_TRANSFER.configure(text='''TRANSFER (TO AZBANK)''')

        self.quickAccount_debit = tk.Label(self.quickTransfer)
        self.quickAccount_debit.place(relx=0.029, rely=0.211, height=30, width=83)
        self.quickAccount_debit.configure(activebackground="#f9f9f9")
        self.quickAccount_debit.configure(activeforeground="black")
        self.quickAccount_debit.configure(background="#d9d9d9")
        self.quickAccount_debit.configure(disabledforeground="#a3a3a3")
        self.quickAccount_debit.configure(font="-family {Segoe UI} -size 10")
        self.quickAccount_debit.configure(foreground="#000000")
        self.quickAccount_debit.configure(highlightbackground="#d9d9d9")
        self.quickAccount_debit.configure(highlightcolor="black")
        self.quickAccount_debit.configure(text='''Acc. to debit''')

        self.quickBank = tk.Label(self.quickTransfer)
        self.quickBank.place(relx=0.029, rely=0.416, height=30, width=83)
        self.quickBank.configure(activebackground="#f9f9f9")
        self.quickBank.configure(activeforeground="black")
        self.quickBank.configure(background="#d9d9d9")
        self.quickBank.configure(disabledforeground="#a3a3a3")
        self.quickBank.configure(font="-family {Segoe UI} -size 10")
        self.quickBank.configure(foreground="#000000")
        self.quickBank.configure(highlightbackground="#d9d9d9")
        self.quickBank.configure(highlightcolor="black")
        self.quickBank.configure(text='''Beneficiary''')

        self.quickbenEntry2 = tk.Entry(self.quickTransfer)
        self.quickbenEntry2.place(relx=0.29, rely=0.426, height=20, relwidth=0.243)
        self.quickbenEntry2.configure(background="white")
        self.quickbenEntry2.configure(disabledforeground="#a3a3a3")
        self.quickbenEntry2.configure(font="TkFixedFont")
        self.quickbenEntry2.configure(foreground="#000000")
        self.quickbenEntry2.configure(highlightbackground="#d9d9d9")
        self.quickbenEntry2.configure(highlightcolor="black")
        self.quickbenEntry2.configure(insertbackground="black")
        self.quickbenEntry2.configure(selectbackground="blue")
        self.quickbenEntry2.configure(selectforeground="white")

        self.quickamount = tk.Label(self.quickTransfer)
        self.quickamount.place(relx=0.500, rely=0.211, height=30, width=83)
        self.quickamount.configure(activeforeground="black")
        self.quickamount.configure(background="#d9d9d9")
        self.quickamount.configure(disabledforeground="#a3a3a3")
        self.quickamount.configure(font="-family {Segoe UI} -size 10")
        self.quickamount.configure(foreground="#000000")
        self.quickamount.configure(highlightbackground="#d9d9d9")
        self.quickamount.configure(highlightcolor="black")
        self.quickamount.configure(text='''Amount''')

        self.quickNarration = tk.Label(self.quickTransfer)
        self.quickNarration.place(relx=0.500, rely=0.416, height=30, width=83)
        self.quickNarration.configure(activebackground="#f9f9f9")
        self.quickNarration.configure(activeforeground="black")
        self.quickNarration.configure(background="#d9d9d9")
        self.quickNarration.configure(disabledforeground="#a3a3a3")
        self.quickNarration.configure(font="-family {Segoe UI} -size 10")
        self.quickNarration.configure(foreground="#000000")
        self.quickNarration.configure(highlightbackground="#d9d9d9")
        self.quickNarration.configure(highlightcolor="black")
        self.quickNarration.configure(text='''Narration''')

        self.quickamountEntry3 = tk.Entry(self.quickTransfer)
        self.quickamountEntry3.place(relx=0.725, rely=0.226, height=20, relwidth=0.243)
        self.quickamountEntry3.configure(background="white")
        self.quickamountEntry3.configure(disabledforeground="#a3a3a3")
        self.quickamountEntry3.configure(font="TkFixedFont")
        self.quickamountEntry3.configure(foreground="#000000")
        self.quickamountEntry3.configure(highlightbackground="#d9d9d9")
        self.quickamountEntry3.configure(highlightcolor="black")
        self.quickamountEntry3.configure(insertbackground="black")
        self.quickamountEntry3.configure(selectbackground="blue")
        self.quickamountEntry3.configure(selectforeground="white")

        self.quicknarrEntry4 = tk.Entry(self.quickTransfer)
        self.quicknarrEntry4.place(relx=0.725, rely=0.426, height=20, relwidth=0.243)
        self.quicknarrEntry4.configure(background="white")
        self.quicknarrEntry4.configure(disabledforeground="#a3a3a3")
        self.quicknarrEntry4.configure(font="TkFixedFont")
        self.quicknarrEntry4.configure(foreground="#000000")
        self.quicknarrEntry4.configure(highlightbackground="#d9d9d9")
        self.quicknarrEntry4.configure(highlightcolor="black")
        self.quicknarrEntry4.configure(insertbackground="black")
        self.quicknarrEntry4.configure(selectbackground="blue")
        self.quicknarrEntry4.configure(selectforeground="white")

        self.quickPin = tk.Label(self.quickTransfer)
        self.quickPin.place(relx=0.406, rely=0.579, height=19, width=26)
        self.quickPin.configure(activebackground="#f9f9f9")
        self.quickPin.configure(activeforeground="black")
        self.quickPin.configure(background="#d9d9d9")
        self.quickPin.configure(disabledforeground="#a3a3a3")
        self.quickPin.configure(font="-family {Segoe UI} -size 10")
        self.quickPin.configure(foreground="#000000")
        self.quickPin.configure(highlightbackground="#d9d9d9")
        self.quickPin.configure(highlightcolor="black")
        self.quickPin.configure(text='''Pin''')

        self.quickpinEntry5 = tk.Entry(self.quickTransfer)
        self.quickpinEntry5.place(relx=0.493, rely=0.579, height=20, relwidth=0.243)
        self.quickpinEntry5.configure(background="white")
        self.quickpinEntry5.configure(disabledforeground="#a3a3a3")
        self.quickpinEntry5.configure(font="TkFixedFont")
        self.quickpinEntry5.configure(foreground="#000000")
        self.quickpinEntry5.configure(highlightbackground="#d9d9d9")
        self.quickpinEntry5.configure(highlightcolor="black")
        self.quickpinEntry5.configure(insertbackground="black")
        self.quickpinEntry5.configure(selectbackground="blue")
        self.quickpinEntry5.configure(selectforeground="white")

        self.quickENTER = tk.Button(self.quickTransfer)
        self.quickENTER.place(relx=0.609, rely=0.779, height=24, width=57)
        self.quickENTER.configure(activebackground="#ececec")
        self.quickENTER.configure(activeforeground="#000000")
        self.quickENTER.configure(background="#808040")
        self.quickENTER.configure(disabledforeground="#a3a3a3")
        self.quickENTER.configure(font="-family {Verdana} -size 9 -weight bold")
        self.quickENTER.configure(foreground="#ffffff")
        self.quickENTER.configure(highlightbackground="#d9d9d9")
        self.quickENTER.configure(highlightcolor="black")
        self.quickENTER.configure(pady="0")
        self.quickENTER.configure(text='''Enter''')

        self.quickEXIT = tk.Button(self.quickTransfer)
        self.quickEXIT.place(relx=0.783, rely=0.779, height=24, width=53)
        self.quickEXIT.configure(activebackground="#ececec")
        self.quickEXIT.configure(activeforeground="#000000")
        self.quickEXIT.configure(background="#804040")
        self.quickEXIT.configure(disabledforeground="#a3a3a3")
        self.quickEXIT.configure(font="-family {Verdana} -size 9 -weight bold")
        self.quickEXIT.configure(foreground="#ffffff")
        self.quickEXIT.configure(highlightbackground="#d9d9d9")
        self.quickEXIT.configure(highlightcolor="black")
        self.quickEXIT.configure(pady="0")
        self.quickEXIT.configure(text='''Exit''')

        self.quickaccnoEntry1 = tk.Entry(self.quickTransfer)
        self.quickaccnoEntry1.place(relx=0.29, rely=0.226, height=20, relwidth=0.243)
        self.quickaccnoEntry1.configure(background="white")
        self.quickaccnoEntry1.configure(disabledforeground="#a3a3a3")
        self.quickaccnoEntry1.configure(font="TkFixedFont")
        self.quickaccnoEntry1.configure(foreground="#000000")
        self.quickaccnoEntry1.configure(highlightbackground="#d9d9d9")
        self.quickaccnoEntry1.configure(highlightcolor="black")
        self.quickaccnoEntry1.configure(insertbackground="black")
        self.quickaccnoEntry1.configure(selectbackground="blue")
        self.quickaccnoEntry1.configure(selectforeground="white")

        self.quickTransfer_logo = tk.Label(self.quickTransfer)
        self.quickTransfer_logo.place(relx=0.058, rely=0.852, height=51, width=104)
        self.quickTransfer_logo.configure(background="#d9d9d9")
        self.quickTransfer_logo.configure(disabledforeground="#a3a3a3")
        self.quickTransfer_logo.configure(foreground="#000000")
        # photo_location = os.path.join(prog_location, "Azlogo3.jpg")
        # global _img0
        # _img0 = ImageTk.PhotoImage(file=photo_location)
        # self.quickTransfer_logo.configure(image=_img0)
        self.quickTransfer_logo.configure(text='''Label''')

        # --------------------------------VTU (AIRTIME) FRAME----------------------
        self.quickAirtime = tk.Frame(top)
        self.quickAirtime.place(relx=0.183, rely=0.044, relheight=0.885
                           , relwidth=0.575)
        self.quickAirtime.configure(relief='groove')
        self.quickAirtime.configure(borderwidth="2")
        self.quickAirtime.configure(relief="groove")
        self.quickAirtime.configure(background="#d9d9d9")
        self.quickAirtime.configure(highlightbackground="#d9d9d9")
        self.quickAirtime.configure(highlightcolor="black")

        self.quickAIRTIME_RECHARGE = tk.Label(self.quickAirtime)
        self.quickAIRTIME_RECHARGE.place(relx=0.203, rely=0.025, height=40, width=214)

        self.quickAIRTIME_RECHARGE.configure(activebackground="#f9f9f9")
        self.quickAIRTIME_RECHARGE.configure(activeforeground="black")
        self.quickAIRTIME_RECHARGE.configure(background="#d9d9d9")
        self.quickAIRTIME_RECHARGE.configure(disabledforeground="#a3a3a3")
        self.quickAIRTIME_RECHARGE.configure(font="-family {Verdana} -size 11 -weight bold")
        # self.AIRTIME_RECHARGE.configure(font="-family {Segoe UI} -size 10")
        self.quickAIRTIME_RECHARGE.configure(foreground="#000000")
        self.quickAIRTIME_RECHARGE.configure(highlightbackground="#d9d9d9")
        self.quickAIRTIME_RECHARGE.configure(highlightcolor="black")
        self.quickAIRTIME_RECHARGE.configure(text='''AIRTIME RECHARGE''')

        self.quickAccount_to_debit = tk.Label(self.quickAirtime)
        self.quickAccount_to_debit.place(relx=0.058, rely=0.201, height=20, width=104)

        self.quickAccount_to_debit.configure(activebackground="#f9f9f9")
        self.quickAccount_to_debit.configure(activeforeground="black")
        self.quickAccount_to_debit.configure(background="#d9d9d9")
        self.quickAccount_to_debit.configure(disabledforeground="#a3a3a3")
        # self.Account_to_dedit.configure(font="-family {Verdana} -size 9")
        self.quickAccount_to_debit.configure(font="-family {Segoe UI} -size 10")
        self.quickAccount_to_debit.configure(foreground="#000000")
        self.quickAccount_to_debit.configure(highlightbackground="#d9d9d9")
        self.quickAccount_to_debit.configure(highlightcolor="black")
        self.quickAccount_to_debit.configure(text='''Account To Debit''')

        self.quickdebitacc = tk.Entry(self.quickAirtime)
        self.quickdebitacc.place(relx=0.406, rely=0.201, relheight=0.053
                              , relwidth=0.41)
        self.quickdebitacc.configure(background="white")
        self.quickdebitacc.configure(disabledforeground="#a3a3a3")
        self.quickdebitacc.configure(font="TkFixedFont")
        self.quickdebitacc.configure(foreground="#000000")
        self.quickdebitacc.configure(highlightbackground="#d9d9d9")
        self.quickdebitacc.configure(highlightcolor="black")
        self.quickdebitacc.configure(insertbackground="black")
        self.quickdebitacc.configure(selectbackground="blue")
        self.quickdebitacc.configure(selectforeground="white")

        self.quickvendor = tk.Label(self.quickAirtime)
        self.quickvendor.place(relx=0.058, rely=0.301, height=20, width=104)
        self.quickvendor.configure(activebackground="#f9f9f9")
        self.quickvendor.configure(activeforeground="black")
        self.quickvendor.configure(background="#d9d9d9")
        self.quickvendor.configure(disabledforeground="#a3a3a3")
        self.quickvendor.configure(font="-family {Segoe UI} -size 10")
        self.quickvendor.configure(foreground="#000000")
        self.quickvendor.configure(highlightbackground="#d9d9d9")
        self.quickvendor.configure(highlightcolor="black")
        self.quickvendor.configure(text='''Vendor''')

        self.quickTCombobox2 = ttk.Combobox(self.quickAirtime)
        self.quickTCombobox2.place(relx=0.406, rely=0.301, relheight=0.053
                              , relwidth=0.31)
        self.quickTCombobox2.configure(textvariable="")
        self.quickTCombobox2.configure(takefocus="")

        self.quickphone = tk.Label(self.quickAirtime)
        self.quickphone.place(relx=0.058, rely=0.501, height=20, width=104)
        self.quickphone.configure(activebackground="#f9f9f9")
        self.quickphone.configure(activeforeground="black")
        self.quickphone.configure(background="#d9d9d9")
        self.quickphone.configure(disabledforeground="#a3a3a3")
        self.quickphone.configure(font="-family {Segoe UI} -size 10")
        self.quickphone.configure(foreground="#000000")
        self.quickphone.configure(highlightbackground="#d9d9d9")
        self.quickphone.configure(highlightcolor="black")
        self.quickphone.configure(text='''Phone''')

        self.quickAmount = tk.Label(self.quickAirtime)
        self.quickAmount.place(relx=0.058, rely=0.401, height=20, width=104)
        self.quickAmount.configure(activebackground="#f9f9f9")
        self.quickAmount.configure(activeforeground="black")
        self.quickAmount.configure(background="#d9d9d9")
        self.quickAmount.configure(disabledforeground="#a3a3a3")
        self.quickAmount.configure(font="-family {Segoe UI} -size 10")
        self.quickAmount.configure(foreground="#000000")
        self.quickAmount.configure(highlightbackground="#d9d9d9")
        self.quickAmount.configure(highlightcolor="black")
        self.quickAmount.configure(text='''Amount''')

        self.quickNarr = tk.Label(self.quickAirtime)
        self.quickNarr.place(relx=0.058, rely=0.601, height=20, width=104)
        self.quickNarr.configure(activebackground="#f9f9f9")
        self.quickNarr.configure(activeforeground="black")
        self.quickNarr.configure(background="#d9d9d9")
        self.quickNarr.configure(disabledforeground="#a3a3a3")
        self.quickNarr.configure(font="-family {Segoe UI} -size 10")
        self.quickNarr.configure(foreground="#000000")
        self.quickNarr.configure(highlightbackground="#d9d9d9")
        self.quickNarr.configure(highlightcolor="black")
        self.quickNarr.configure(text='''Narration''')

        self.quickpin = tk.Label(self.quickAirtime)
        self.quickpin.place(relx=0.058, rely=0.701, height=20, width=104)
        self.quickpin.configure(activebackground="#f9f9f9")
        self.quickpin.configure(activeforeground="black")
        self.quickpin.configure(background="#d9d9d9")
        self.quickpin.configure(disabledforeground="#a3a3a3")
        self.quickpin.configure(font="-family {Segoe UI} -size 10")
        self.quickpin.configure(foreground="#000000")
        self.quickpin.configure(highlightbackground="#d9d9d9")
        self.quickpin.configure(highlightcolor="black")
        self.quickpin.configure(text='''Pin''')

        self.quickenter = tk.Button(self.quickAirtime)
        self.quickenter.place(relx=0.45, rely=0.85, height=24, width=57)
        self.quickenter.configure(activebackground="#ececec")
        self.quickenter.configure(activeforeground="#000000")
        self.quickenter.configure(background="#808000")
        self.quickenter.configure(disabledforeground="#a3a3a3")
        self.quickenter.configure(font="-family {Verdana} -size 10 -weight bold")
        self.quickenter.configure(foreground="#ffffff")
        self.quickenter.configure(highlightbackground="#d9d9d9")
        self.quickenter.configure(highlightcolor="black")
        self.quickenter.configure(pady="0")
        self.quickenter.configure(text='''Enter''')

        self.quickexit = tk.Button(self.quickAirtime)
        self.quickexit.place(relx=0.65, rely=0.85, height=24, width=57)
        self.quickexit.configure(activebackground="#ececec")
        self.quickexit.configure(activeforeground="#000000")
        self.quickexit.configure(background="#800000")
        self.quickexit.configure(disabledforeground="#a3a3a3")
        self.quickexit.configure(font="-family {Verdana} -size 10 -weight bold")
        self.quickexit.configure(foreground="#ffffff")
        self.quickexit.configure(highlightbackground="#d9d9d9")
        self.quickexit.configure(highlightcolor="black")
        self.quickexit.configure(pady="0")
        self.quickexit.configure(text='''Back''')

        self.quicknarrEntry6 = tk.Entry(self.quickAirtime)
        self.quicknarrEntry6.place(relx=0.406, rely=0.601, height=20, relwidth=0.41)
        self.quicknarrEntry6.configure(background="white")
        self.quicknarrEntry6.configure(disabledforeground="#a3a3a3")
        self.quicknarrEntry6.configure(font="TkFixedFont")
        self.quicknarrEntry6.configure(foreground="#000000")
        self.quicknarrEntry6.configure(highlightbackground="#d9d9d9")
        self.quicknarrEntry6.configure(highlightcolor="black")
        self.quicknarrEntry6.configure(insertbackground="black")
        self.quicknarrEntry6.configure(selectbackground="blue")
        self.quicknarrEntry6.configure(selectforeground="white")

        self.quickAirtime_Phone = tk.Entry(self.quickAirtime)
        self.quickAirtime_Phone.place(relx=0.406, rely=0.501, height=20, relwidth=0.41)
        self.quickAirtime_Phone.configure(background="white")
        self.quickAirtime_Phone.configure(disabledforeground="#a3a3a3")
        self.quickAirtime_Phone.configure(font="TkFixedFont")
        self.quickAirtime_Phone.configure(foreground="#000000")
        self.quickAirtime_Phone.configure(highlightbackground="#d9d9d9")
        self.quickAirtime_Phone.configure(highlightcolor="black")
        self.quickAirtime_Phone.configure(insertbackground="black")
        self.quickAirtime_Phone.configure(selectbackground="blue")
        self.quickAirtime_Phone.configure(selectforeground="white")

        self.quickpinEntry8 = tk.Entry(self.quickAirtime)
        self.quickpinEntry8.place(relx=0.406, rely=0.701, height=20, relwidth=0.41)
        self.quickpinEntry8.configure(background="white")
        self.quickpinEntry8.configure(disabledforeground="#a3a3a3")
        self.quickpinEntry8.configure(font="TkFixedFont")
        self.quickpinEntry8.configure(foreground="#000000")
        self.quickpinEntry8.configure(highlightbackground="#d9d9d9")
        self.quickpinEntry8.configure(highlightcolor="black")
        self.quickpinEntry8.configure(insertbackground="black")
        self.quickpinEntry8.configure(selectbackground="blue")
        self.quickpinEntry8.configure(selectforeground="white")

        self.quickAirtime_logo = tk.Label(self.quickAirtime)
        self.quickAirtime_logo.place(relx=0.058, rely=0.877, height=41, width=114)
        self.quickAirtime_logo.configure(background="#d9d9d9")
        self.quickAirtime_logo.configure(disabledforeground="#a3a3a3")
        self.quickAirtime_logo.configure(foreground="#000000")
        # photo_location = os.path.join(prog_location, "Azlogo3.jpg")
        # global _img81
        # _img81 = ImageTk.PhotoImage(file=photo_location)
        # self.quickAirtime_logo.configure(image=_img81)
        self.quickAirtime_logo.configure(text='''Label''')

        self.quickAirtime_Amount = tk.Entry(self.quickAirtime)
        self.quickAirtime_Amount.place(relx=0.406, rely=0.401, height=20
                                  , relwidth=0.41)
        self.quickAirtime_Amount.configure(background="white")
        self.quickAirtime_Amount.configure(disabledforeground="#a3a3a3")
        self.quickAirtime_Amount.configure(font="TkFixedFont")
        self.quickAirtime_Amount.configure(foreground="#000000")
        self.quickAirtime_Amount.configure(insertbackground="black")

        self.show_frame(self.quickTransfer)

        # ----------------------RAISE FRAME METHOD-------------------------------#
    def show_frame(self, content):
            self.content = content
            self.content.tkraise()
if __name__ == '__main__':
    vp_start_gui()
